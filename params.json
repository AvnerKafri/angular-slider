{"name":"Angular-slider","tagline":"Slider directive for AngularJS. Based on: http://github.com/prajwalkman/angular-slider","body":"# angular-slider [![Build Status](https://secure.travis-ci.org/Venturocket/angular-slider.png?branch=master)](http://travis-ci.org/Venturocket/angular-slider)\r\nSlider directive for AngularJS. https://venturocket.github.io/angular-slider  \r\nLicense: MIT\r\n\r\n## Features\r\n- Single or dual knob\r\n- Fully Stylable\r\n- Custom arbitrary scaling\r\n- Adjustable knob \"Stickiness\"\r\n- Adjustable minimum range width\r\n- Draggable selection range\r\n- Full touch event support\r\n\r\n## Known Issues\r\n- When hidden during initialization (`display: none;`) the slider might not display correctly when shown. Issue `$scope.$broadcast('refreshSlider');` \r\nin a parent scope to tell the slider to update the DOM. \r\n- The `step` attribute conflicts with angular-foundation's `step` directive ([docs](http://madmimi.github.io/angular-foundation/#/tour)). To remedy this, \r\nuse `step-width` instead (it's an alias of `step`). `step` will be deprecated in the next minor release, so if you want to do a bit of future proofing \r\nyou can start using `step-width` now and save yourself a bit of migration work later .\r\n\r\n## Installation\r\n\r\n```\r\nbower install venturocket-angular-slider\r\n```\r\n\r\n## Usage\r\n### Requirements\r\n\r\nAdd `<script>`s to your `html` files for [angular](https://github.com/angular/bower-angular), [angular-touch](https://github.com/angular/bower-angular-touch) and angular-slider:\r\n\r\n```html\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.2.14/angular.min.js\"></script>\r\n<script src=\"https://ajax.googleapis.com/ajax/libs/angularjs/1.2.14/angular-touch.min.js\"></script>\r\n<script src=\"build/angular-slider.min.js\"></script>\r\n```\r\n\r\nAnd add `vr.directives.slider` as a dependency for your app:\r\n\r\n```javascript\r\nangular.module('myApp', ['vr.directives.slider', ...]);\r\n```\r\n\r\n**NOTE:** in IE10/11 an annoying tooltip will show up unless you add the following css:\r\n```css\r\n::-ms-tooltip {\r\n\tdisplay: none;\r\n}\r\n```\r\n\r\n### Single Knob\r\n#### Markup\r\nAs an element:\r\n```html\r\n<slider\r\n    ng-model=\"{expression}\"\r\n    floor=\"{float}\"\r\n    ceiling=\"{float}\"\r\n    step=\"{float}\"\r\n    precision=\"{integer}\"\r\n    stretch=\"{integer}\"\r\n    translate-fn=\"{expression}\"\r\n    scale-fn=\"{expression}\"\r\n    inverse-scale-fn=\"{expression}\">\r\n</slider>\r\n```\r\nAs an attribute:\r\n```html\r\n<div\r\n    slider\r\n    ng-model=\"{expression}\"\r\n    floor=\"{float}\"\r\n    ceiling=\"{float}\"\r\n    step=\"{float}\"\r\n    precision=\"{integer}\"\r\n    stretch=\"{integer}\"\r\n    translate-fn=\"{expression}\"\r\n    scale-fn=\"{expression}\"\r\n    inverse-scale-fn=\"{expression}\">\r\n</div>\r\n```\r\n\r\n#### Parameters\r\n|Param      |Type   |Required |Default |Details |\r\n|-----------|-------|---------|--------|--------|\r\n|ng-model   |expression |Yes  |none    |Assignable angular expression to which to data-bind the value. |\r\n|floor      |float  |Yes      |none    |The lowest value possible |\r\n|ceiling    |float  |Yes      |none    |The highest value possible |\r\n|step       |float  |No       |inf     |The width between each tick. |\r\n|precision  |integer|No       |0       |The numerical precision to which to round the value. |\r\n|stretch    |integer|No       |3       |How sticky the knobs will act. 1 = no stickiness |\r\n|translate-fn|expression|No   |none    |A translation function to apply to all view values. Be sure to omit the parentheses (e.g. \"transFunc\" instead of \"transFunc()\") |\r\n|scale-fn   |expression|No    |none    |A scaling function to apply to the value. See the `Scaling` section below for more details. Be sure to omit the parentheses (e.g. \"scaleFunc\" instead of \"scaleFunc()\") |\r\n|inverse-scale-fn|expression|No|none   |The inverse of the scaling function. This is required if a scaling function is specified. See the `Scaling` section below for more details. Be sure to omit the parentheses (e.g. \"scaleFunc\" instead of \"scaleFunc()\") |\r\n--\r\n### Dual Knob\r\n#### Markup\r\nAs an element:\r\n```html\r\n<slider\r\n    ng-model=\"{expression}\"\r\n    ng-model-range=\"{expression}\"\r\n    floor=\"{float}\"\r\n    ceiling=\"{float}\"\r\n    buffer=\"{float}\"\r\n    step=\"{float}\"\r\n    precision=\"{integer}\"\r\n    stretch=\"{integer}\"\r\n    translate-fn=\"{expression}\"\r\n    translate-range-fn=\"{expression}\"\r\n    translate-combined-fn=\"{expression}\"\r\n    scale-fn=\"{expression}\"\r\n    inverse-scale-fn=\"{expression}\">\r\n</slider>\r\n```\r\nAs an attribute:\r\n```html\r\n<div\r\n    slider\r\n    ng-model=\"{expression}\"\r\n    ng-model-range=\"{expression}\"\r\n    floor=\"{float}\"\r\n    ceiling=\"{float}\"\r\n    buffer=\"{float}\"\r\n    step=\"{float}\"\r\n    precision=\"{integer}\"\r\n    stretch=\"{integer}\"\r\n    translate-fn=\"{expression}\"\r\n    translate-range-fn=\"{expression}\"\r\n    translate-combined-fn=\"{expression}\"\r\n    scale-fn=\"{expression}\"\r\n    inverse-scale-fn=\"{expression}\">\r\n</div>\r\n```\r\n\r\n#### Parameters\r\n|Param      |Type   |Required |Default |Details |\r\n|-----------|-------|---------|--------|--------|\r\n|ng-model\t|expression\t|Yes  |none    |Assignable angular expression to which to data-bind the low value. |\r\n|ng-model-range|expression|Yes|none    |Assignable angular expression to which to data-bind the high value. |\r\n|floor      |float  |Yes      |none    |The lowest value possible |\r\n|ceiling    |float  |Yes      |none    |The highest value possible |\r\n|buffer\t\t|float\t|No\t\t  |0\t   |The minimum difference between the low and high values |\r\n|step       |float  |No       |inf     |The width between each tick. |\r\n|precision  |integer|No       |0       |The numerical precision to which to round the value. |\r\n|stretch    |float  |No       |3       |How sticky the knobs will act. 1 = no stickiness |\r\n|translate-fn|expression|No\t  |none\t   |A translation function to apply to most of the view values. Be sure to omit the parentheses (e.g. \"transFunc\" instead of \"transFunc()\") |\r\n|translate-range-fn|expression|No|none |A translation function to apply to the range value. Be sure to omit the parentheses (e.g. \"transFunc\" instead of \"transFunc()\") |\r\n|translate-combined-fn|expression|No|none|A translation function to apply to the combined value (when the knobs are too close together). Be sure to omit the parentheses (e.g. \"transFunc\" instead of \"transFunc()\") |\r\n|scale-fn   |expression|No\t  |none    |A scaling function to apply to the value. See the `Scaling` section below for more details. Be sure to omit the parentheses (e.g. \"scaleFunc\" instead of \"scaleFunc()\") |\r\n|inverse-scale-fn|expression|No|none   |The inverse of the scaling function. This is required if a scaling function is specified. See the `Scaling` section below for more details. Be sure to omit the parentheses (e.g. \"scaleFunc\" instead of \"scaleFunc()\") |\r\n\r\n\r\n## Scaling\r\nYou can supply any arbitrary scaling function (and its inverse) to the slider to suit your needs. \r\nThe inverse scaling function MUST be specified if a scaling function is specified (and vice versa).\r\nThe scaling/inverse function can be pretty much anything as long as they take a number as a parameter and return a number. Like this:\r\n```javascript\r\nfunction scaleFn(value) {\r\n    return Math.pow(value,3);\r\n}\r\nfunction inverseScaleFn(value) {\r\n\tvar sign = (value == 0) ? 1 : (value/Math.abs(value));\r\n    return sign * Math.pow(Math.abs(value),1/3);\r\n}\r\n```\r\nA few notes:\r\n- scaleFn(inverseScaleFn(x)) MUST produce x or you're gonna have a bad time\r\n- If your scale function returns the same y for multiple x's within the range of the slider you're gonna have a bad time\r\n- If the floor of your slider dips into negative numbers and you don't account for possible imaginary numbers you're gonna have a bad time\r\n\r\n## Additional Features\r\n- `ngChange` support ([docs](http://docs.angularjs.org/api/ng/directive/ngChange))\r\n- `ngDisabled` support ([docs](http://docs.angularjs.org/api/ng/directive/ngDisabled))\r\n- implements `ngModelController` for form validation and dirty/pristine states ([docs](http://docs.angularjs.org/api/ng/type/ngModel.NgModelController))\r\n","google":"UA-20652388-5","note":"Don't delete this file! It's used internally to help with page regeneration."}